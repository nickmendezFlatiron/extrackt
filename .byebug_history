exit
JSON.parse(params[p][:key])
params[p][:key]
params[p]
p
exit
keys[1..len]
len
keys
exit
params[:p]
params[:p][:key]
JSON.parse(params[:p][:key]
exit
exot
params.keys[1..1].each do |p| puts "orint" end
params.keys[1..1].each do |p|
params.keys[1..1]
len
exit
!!
exit
params[:pad1][:name]
params[:pad1]
params.keys[1..len-3].each {|p| puts "test"}
params.keys[0..len-3].each {|p| puts "test"}
params.keys[0..len-2].each {|p| puts "test"}
params.keys[0..len].each {|p| puts "test"}
len = params.keys.length
params.keys.length
param.keys.length
par = params.pop()
par = params.pop
par = params[0..-3]
par = params.length
p
params
p
p = params.slice(0 , -1)
p = params.splice(0 , -1)
params.each{|p| puts "p"}
params[:pad1]
params[:collection]
params
exit
params.count
params
params.length
params
params[:sample]
params[:collection].name
params[:collection][:name]
params["collection"][:name]
params["collection"]
params["collection']
params["collection'}
params
exit
params["collection"]["description"]
params["collection"]["cover_art"]
params["collection"]
params
params["cover_art"]
exit
current_user.id
exit
JSON.parse(sample)
sample
sample = params["sample"]["audio_file"]
params["sample"]["audio_file"]
params["sample"]
params["sample'] => audio_file
params["sample'] => "audio_file"
params["audio+file"]
params["sample"=>"audio_file"]
params["sample"]
params["collection"]
params
exit
invalid
exit
user.update(full_name: params[:full_name])
user.update(full_name: params[full_name])
user
exit
user.update!(user_params)
params
user
q
!!!
!!
!
q
params
exit
params[:username]
user
